syntax = "proto3";

package replaypb;

import "github.com/luno/reflex/reflexpb/reflex.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

service Replay {
  rpc RunWorkflow(RunRequest) returns (OK) {}
  rpc SignalRun(SignalRequest) returns (OK) {}
  rpc RequestActivity(KeyMessage) returns (Empty) {}
  rpc RespondActivity(KeyMessage) returns (Empty) {}
  rpc EmitOutput(KeyMessage) returns (Empty) {}
  rpc CompleteRun(CompleteRequest) returns (Empty) {}
  rpc RestartRun(RunRequest) returns (Empty) {}
  rpc ListBootstrapEvents(ListBootstrapRequest) returns (Events) {}
  rpc Stream(StreamRequest) returns (stream reflexpb.Event) {}
}

message Empty {} // Empty implies event either inserted or a duplicate already exists.

message OK {
  bool ok = 1; // Ok implies event inserted, so no duplicates.
}

message SleepDone{}

message SleepRequest{
  google.protobuf.Duration duration = 1;
}

message Events {
  repeated reflexpb.Event events = 1;
}

message RunRequest {
  string key = 1;
  google.protobuf.Any message = 2;
}

message SignalRequest {
  string namespace = 1;
  string workflow = 2;
  string run = 3;
  string signal = 4;
  google.protobuf.Any message = 5;
  string external_id = 6;
}

message KeyMessage {
  string key = 1;
  google.protobuf.Any message = 2;
}

message CompleteRequest {
  string key = 1;
}

message ListBootstrapRequest {
  string key = 1;
}

message StreamRequest {
  string namespace = 1;
  reflexpb.StreamRequest req = 2;
  string workflow = 3;
  string run = 4;
}
